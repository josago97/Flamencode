# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish release console app

# Declaring custom variables
env:
  PROJECT_NAME: Flamencode
  RELEASE_FOLDER: release
  OPERATIVE_SYSTEM_RUNTIMES: win-x64 osx-x64 linux-x64
  OPERATIVE_SYSTEM_FOLDERS: Windows-x64 Macos-x64 Linux-x64

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'

jobs:
  build:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v3 

    # Build project to the release-folder
    - name: Build .NET Project
      run: |
        IFS=' ' read -ra runtimes <<< "${{ env.OPERATIVE_SYSTEM_RUNTIMES }}"
        IFS=' ' read -ra folders <<< "${{ env.OPERATIVE_SYSTEM_FOLDERS }}"
        releaseFolder=${{env.RELEASE_FOLDER}}
        for (( i=0; i<${#runtimes[@]}; i++ )); do
          runtime=${runtimes[i]}
          folder=${folders[i]}
          fullPath=${releaseFolder}/${folder}
          dotnet publish $PROJECT_NAME/$PROJECT_NAME.csproj -r $runtime -c Release -o "$fullPath" --nologo --self-contained true /p:PublishSingleFile=true /p:DebugType=None /p:DebugSymbols=false
          cd $fullPath
          ls
          zip -r ../${folder}.zip *
        done
    
    - name: Create release
      run: |
        assets=()
        for asset in ./${{env.RELEASE_FOLDER}}/*.zip; do
          assets+=("-a" "$asset")
        done
        tag_name=v${{ github.event.inputs.version }}
        hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
