# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish console app

# Declaring custom variables
env:
  PROJECT_NAME: Flamencode
  OPERATIVE_SYSTEMS: win-x64 osx-x64 linux-x64
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'

jobs:
  build:
  
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v3
    
    # Set up .NET SDK
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: 7.0.x
        
    # Build project to the release-folder
    - name: Build .NET Project
      run: |
        for os in $OPERATIVE_SYSTEMS
        do
          echo $os
          dotnet publish $PROJECT_NAME/$PROJECT_NAME.csproj -r $os -c Release -o release/$os --nologo --self-contained true /p:PublishSingleFile=true /p:DebugType=None /p:DebugSymbols=false
        done
        cd release
        ls

     # Create release
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }} # Reemplaza con la versi√≥n que quieras asignar a tu release
        release_name: Release ${{ github.event.inputs.version }} # Nombre de la release
        body: '' # Cuerpo de la release
        draft: false
        prerelease: false
        
    # Upload release
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/MyProject.exe # Reemplaza con la ruta al ejecutable generado en tu proyecto
        asset_name: MyProject.exe # Nombre del ejecutable en la Release
        asset_content_type: application/octet-stream
